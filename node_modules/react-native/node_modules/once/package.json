{
  "_args": [
    [
      "once@https://registry.npmjs.org/once/-/once-1.3.2.tgz",
      "/Users/sunny/MyProject/node_modules/react-native"
    ]
  ],
  "_from": "https://registry.npmjs.org/once/-/once-1.3.2.tgz",
  "_id": "once@1.3.2",
  "_inCache": true,
  "_location": "/react-native/once",
  "_phantomChildren": {},
  "_requested": {
    "name": "once",
    "raw": "once@https://registry.npmjs.org/once/-/once-1.3.2.tgz",
    "rawSpec": "https://registry.npmjs.org/once/-/once-1.3.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/once/-/once-1.3.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/react-native/glob",
    "/react-native/inflight",
    "/react-native/jstransform/commoner/glob",
    "/react-native/regenerator/commoner/glob",
    "/react-native/yeoman-environment/globby/glob",
    "/react-native/yeoman-generator/download/got/duplexify/end-of-stream",
    "/react-native/yeoman-generator/download/gulp-decompress/decompress/decompress-tar/tar-stream/end-of-stream",
    "/react-native/yeoman-generator/download/gulp-decompress/decompress/decompress-tarbz2/tar-stream/end-of-stream",
    "/react-native/yeoman-generator/download/gulp-decompress/decompress/decompress-targz/tar-stream/end-of-stream",
    "/react-native/yeoman-generator/download/vinyl-fs/duplexify/end-of-stream",
    "/react-native/yeoman-generator/download/vinyl-fs/glob-stream/glob",
    "/react-native/yeoman-generator/findup-sync/glob",
    "/react-native/yeoman-generator/github-username/gh-got/got/duplexify/end-of-stream",
    "/react-native/yeoman-generator/run-async"
  ],
  "_resolved": "https://registry.npmjs.org/once/-/once-1.3.2.tgz",
  "_shasum": "d8feeca93b039ec1dcdee7741c92bdac5e28081b",
  "_shrinkwrap": null,
  "_spec": "once@https://registry.npmjs.org/once/-/once-1.3.2.tgz",
  "_where": "/Users/sunny/MyProject/node_modules/react-native",
  "author": {
    "email": "i@izs.me",
    "name": "Isaac Z. Schlueter",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/isaacs/once/issues"
  },
  "dependencies": {
    "wrappy": "1"
  },
  "description": "Run a function exactly one time",
  "devDependencies": {
    "tap": "~0.3.0"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/isaacs/once#readme",
  "keywords": [
    "once",
    "function",
    "one",
    "single"
  ],
  "license": "ISC",
  "main": "once.js",
  "name": "once",
  "optionalDependencies": {},
  "readme": "# once\n\nOnly call a function once.\n\n## usage\n\n```javascript\nvar once = require('once')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nOr add to the Function.prototype in a responsible way:\n\n```javascript\n// only has to be done once\nrequire('once').proto()\n\nfunction load (file, cb) {\n  cb = cb.once()\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nIronically, the prototype feature makes this module twice as\ncomplicated as necessary.\n\nTo check whether you function has been called, use `fn.called`. Once the\nfunction is called for the first time the return value of the original\nfunction is saved in `fn.value` and subsequent calls will continue to\nreturn this value.\n\n```javascript\nvar once = require('once')\n\nfunction load (cb) {\n  cb = once(cb)\n  var stream = createStream()\n  stream.once('data', cb)\n  stream.once('end', function () {\n    if (!cb.called) cb(new Error('not found'))\n  })\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/once.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "1.3.2"
}
